git is distributed control system

git --version

git config --global user.name 'Dinesh'
git config --global user.email '---@gmail.com'

Create a new repository
git init  -- pervious time commonly chosen name for branch is master now its main
git config --global init.defaultBranch main/master
 

 //Create your main folder cd to folder and run
 git init
 //main is the default branch, there can be multiple parallel development branches

create a new file - hello.js
create file - readme.md

run- git status

if there are untracked files present use "git add filename" to track

git commit -m 'Add filename'

How to commit and add all files to track

git add ./
git commit -m 'adds all files to track'

How to see history of all commits?
git log

How to switch to old stable version if latest breaks
git checkout 'branch commit hash value'

//  causes detached head warning as head no longer points to latest commit instead to older version
How to restore back to main?
git checkout main

git checkout -f main

git is a tool to track chnages and github is online cloud that stores git repository

git init - local repository- changes are private until we pusg to remote repository
github, gitlabs,bitbucket  - remote repository

git branch -M main --switch to main branch
git remote add origin https://github.com/codinesh1795/git-github-basics.git  -- add remote repo, origin is keyword for main branch in github

git remote add somename newurl -- adding multiple repo

git push -u origin main -- push changes to remote repo

--braches allow us to create different versions of your project, the changes in branched version do not affect main branch until you decide to 
--merge them into the main branch. Different branches can be used to develop seprate features, bug fixes

git branch branch-name -- create a new branch
git checkout branch-name  -- switch to a new branch
git checkout main --switch to main branch
git checkout -b feature-branch   --create and switch to new branch in single command
git branch new-branch-name source-branch-name   --as branches are always created from the branch we are currently in, ensure from which branch 
                                                you want to create new branch

-- commit message - If applied to codebased this commit wil ________?
git push --set-upstream origin feature-branch alternatively one can also use the below command
git push -u origin feature-branch

git push - to push your changes
git pull - anyone can pull changes

